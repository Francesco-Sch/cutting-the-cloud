---
---

<header
	class="flex fixed w-full p-2 md:p-3 2xl:p-4 top-0 text-orange-700 z-50 transition-all"
>
	<p class="flex-grow font-display text-lg min-w-fit">
		<span class="group">
			C<span class="hidden sm:group-hover:inline-block">utting the</span> C<span
				class="hidden sm:group-hover:inline-block">loud</span
			>
		</span>
	</p>

	<nav>
		<ul class="font-mono group text-xs sm:text-base">
			<li class="flex items-center pl-4 sm:pl-0">
				<div
					class="w-2 h-2 -ml-4 mr-2 rounded-full bg-orange-700 animate-pulse invisible"
				>
				</div>
				<a href="/" class="opacity-0 group-hover:opacity-100 transition-all">
					<span>The ☁️ around temperature sensors</span>
				</a>
			</li>
			<li class="flex items-center pl-4 sm:pl-0">
				<div
					class="w-2 h-2 -ml-4 mr-2 rounded-full bg-orange-700 animate-pulse invisible"
				>
				</div>
				<a
					href="./cutting-the-cloud-away/"
					class="opacity-0 group-hover:opacity-100 transition-all"
					>Cutting the ☁️ away</a
				>
			</li>
		</ul>
	</nav>
</header>

<script>
	// Hide links that are not on the current page

	const links = document.querySelectorAll("nav a");
	const dots = document.querySelectorAll("nav .animate-pulse");
	const current = window.location.pathname;

	links.forEach((link) => {
		// Check if current contains cutting-the-cloud-away
		if (
			current.includes("cutting-the-cloud-away") &&
			link.href.includes("cutting-the-cloud-away")
		) {
			link.classList.remove("opacity-0");
			return;
		} else if (
			!current.includes("cutting-the-cloud-away") &&
			!link.href.includes("cutting-the-cloud-away")
		) {
			link.classList.remove("opacity-0");
		}
	});

	dots.forEach((dot) => {
		if (
			current.includes("cutting-the-cloud-away") &&
			dot.nextSibling.href.includes("cutting-the-cloud-away")
		) {
			dot.classList.remove("invisible");
		} else if (
			current.includes("cutting-the-cloud-away") &&
			!dot.nextSibling.href.includes("cutting-the-cloud-away")
		) {
			dot.classList.add("invisible");
		} else if (
			!current.includes("cutting-the-cloud-away") &&
			!dot.nextSibling.href.includes("cutting-the-cloud-away")
		) {
			dot.classList.remove("invisible");
		} else if (
			!current.includes("cutting-the-cloud-away") &&
			dot.nextSibling.href.includes("cutting-the-cloud-away")
		) {
			dot.classList.add("invisible");
		}
	});

	// Move header out of viewport when scrolling down
	function hideHeaderOnScroll() {
		const header = document.querySelector("header");

		let lastScroll = window.scrollY;

		window.addEventListener("scroll", () => {
			const currentScroll = window.scrollY;

			// If current scroll is less than 1200, reset header style and update lastScroll
			if (currentScroll <= 1200) {
				header.style.transform = "translateY(0)";
				lastScroll = currentScroll;
				return;
			}

			// If scrolled down
			if (currentScroll > lastScroll) {
				header.style.transform = "translateY(-100%)";
			}
			// If scrolled up
			else if (currentScroll < lastScroll) {
				header.style.transform = "translateY(0)";
			}

			// Update lastScroll for the next event
			lastScroll = currentScroll;
		});
	}

	document.addEventListener("astro:page-load", () => {
		hideHeaderOnScroll();
	});
</script>
